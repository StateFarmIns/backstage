import{r as d,j as a}from"./iframe-B5rMEWCp.js";import{$ as w}from"./Input-BuZTq0J5.js";import{$ as N}from"./TextField-DmyBQ7iH.js";import{c as l}from"./clsx-B-dksMZM.js";import{F as R}from"./FieldLabel-B7pnDkX_.js";import{F as j}from"./FieldError-BuXL5XPg.js";import{u as $}from"./useStyles-CBH6FDUm.js";import{s as i}from"./TextField.module-BNd6YL_d.js";const u=d.forwardRef((o,c)=>{const{label:r,"aria-label":t,"aria-labelledby":s}=o;d.useEffect(()=>{!r&&!t&&!s&&console.warn("TextField requires either a visible label, aria-label, or aria-labelledby for accessibility")},[r,t,s]);const{classNames:e,dataAttributes:n,style:p,cleanedProps:f}=$("TextField",{size:"small",...o}),{className:x,description:b,icon:m,isRequired:y,secondaryLabel:h,placeholder:v,...T}=f,F=h||(y?"Required":null);return a.jsxs(N,{className:l(e.root,i[e.root],x),...n,"aria-label":t,"aria-labelledby":s,style:p,...T,ref:c,children:[a.jsx(R,{label:r,secondaryLabel:F,description:b}),a.jsxs("div",{className:l(e.inputWrapper,i[e.inputWrapper]),"data-size":n["data-size"],children:[m&&a.jsx("div",{className:l(e.inputIcon,i[e.inputIcon]),"data-size":n["data-size"],"aria-hidden":"true",children:m}),a.jsx(w,{className:l(e.input,i[e.input]),...m&&{"data-icon":!0},placeholder:v})]}),a.jsx(j,{})]})});u.displayName="TextField";u.__docgenInfo={description:"@public",methods:[],displayName:"TextField",props:{type:{required:!1,tsType:{name:"union",raw:"'text' | 'email' | 'tel' | 'url'",elements:[{name:"literal",value:"'text'"},{name:"literal",value:"'email'"},{name:"literal",value:"'tel'"},{name:"literal",value:"'url'"}]},description:"The HTML input type for the text field\n\n@remarks\nUse `SearchField` for\nsearch inputs and `PasswordField` for password inputs."},icon:{required:!1,tsType:{name:"ReactNode"},description:"An icon to render before the input"},size:{required:!1,tsType:{name:"union",raw:"'small' | 'medium' | Partial<Record<Breakpoint, 'small' | 'medium'>>",elements:[{name:"literal",value:"'small'"},{name:"literal",value:"'medium'"},{name:"Partial",elements:[{name:"Record",elements:[{name:"union",raw:"'initial' | 'xs' | 'sm' | 'md' | 'lg' | 'xl'",elements:[{name:"literal",value:"'initial'"},{name:"literal",value:"'xs'"},{name:"literal",value:"'sm'"},{name:"literal",value:"'md'"},{name:"literal",value:"'lg'"},{name:"literal",value:"'xl'"}]},{name:"union",raw:"'small' | 'medium'",elements:[{name:"literal",value:"'small'"},{name:"literal",value:"'medium'"}]}],raw:"Record<Breakpoint, 'small' | 'medium'>"}],raw:"Partial<Record<Breakpoint, 'small' | 'medium'>>"}]},description:`The size of the text field
@defaultValue 'medium'`},placeholder:{required:!1,tsType:{name:"string"},description:"Text to display in the input when it has no value"}},composes:["AriaTextFieldProps","Omit"]};export{u as T};
