import{a as V,b as F,e as M,c as S,d as D}from"./useFocusRing-Dk8-PtBk.js";import{a as m,$ as L,d as O}from"./utils-DHGDFEAl.js";import{$ as R}from"./useFormReset-Cb9BNVL6.js";import{$ as T}from"./useControlledState-DLEwl9TE.js";import{r as c,a4 as x}from"./iframe-B5rMEWCp.js";import{d as q,e as B,f as k}from"./FieldError-BuXL5XPg.js";import{$ as z}from"./Hidden-D-kxa8IG.js";function Q(e,a){let{inputElementType:i="input",isDisabled:n=!1,isRequired:t=!1,isReadOnly:d=!1,type:r="text",validationBehavior:l="aria"}=e,[o,s]=T(e.value,e.defaultValue||"",e.onChange),{focusableProps:P}=V(e,a),b=q({...e,value:o}),{isInvalid:f,validationErrors:v,validationDetails:C}=b.displayValidation,{labelProps:h,fieldProps:g,descriptionProps:p,errorMessageProps:y}=B({...e,isInvalid:f,errorMessage:e.errorMessage||v}),I=F(e,{labelable:!0});const E={type:r,pattern:e.pattern};let[H]=c.useState(o);var $;return R(a,($=e.defaultValue)!==null&&$!==void 0?$:H,s),k(e,b,a),c.useEffect(()=>{if(a.current instanceof M(a.current).HTMLTextAreaElement){let u=a.current;Object.defineProperty(u,"defaultValue",{get:()=>u.value,set:()=>{},configurable:!0})}},[a]),{labelProps:h,inputProps:m(I,i==="input"?E:void 0,{disabled:n,readOnly:d,required:t&&l==="native","aria-required":t&&l==="aria"||void 0,"aria-invalid":f||void 0,"aria-errormessage":e["aria-errormessage"],"aria-activedescendant":e["aria-activedescendant"],"aria-autocomplete":e["aria-autocomplete"],"aria-haspopup":e["aria-haspopup"],"aria-controls":e["aria-controls"],value:o,onChange:u=>s(u.target.value),autoComplete:e.autoComplete,autoCapitalize:e.autoCapitalize,maxLength:e.maxLength,minLength:e.minLength,name:e.name,form:e.form,placeholder:e.placeholder,inputMode:e.inputMode,autoCorrect:e.autoCorrect,spellCheck:e.spellCheck,[parseInt(x.version,10)>=17?"enterKeyHint":"enterkeyhint"]:e.enterKeyHint,onCopy:e.onCopy,onCut:e.onCut,onPaste:e.onPaste,onCompositionEnd:e.onCompositionEnd,onCompositionStart:e.onCompositionStart,onCompositionUpdate:e.onCompositionUpdate,onSelect:e.onSelect,onBeforeInput:e.onBeforeInput,onInput:e.onInput,...P,...g}),descriptionProps:p,errorMessageProps:y,isInvalid:f,validationErrors:v,validationDetails:C}}const W=c.createContext({}),K=c.createContext({});let U=e=>{let{onHoverStart:a,onHoverChange:i,onHoverEnd:n,...t}=e;return t};const X=z(function(a,i){[a,i]=L(a,i,K);let{hoverProps:n,isHovered:t}=S(a),{isFocused:d,isFocusVisible:r,focusProps:l}=D({isTextInput:!0,autoFocus:a.autoFocus}),o=!!a["aria-invalid"]&&a["aria-invalid"]!=="false",s=O({...a,values:{isHovered:t,isFocused:d,isFocusVisible:r,isDisabled:a.disabled||!1,isInvalid:o},defaultClassName:"react-aria-Input"});return x.createElement("input",{...m(U(a),l,n),...s,ref:i,"data-focused":d||void 0,"data-disabled":a.disabled||void 0,"data-hovered":t||void 0,"data-focus-visible":r||void 0,"data-invalid":o||void 0})});export{X as $,Q as a,K as b,W as c};
