/*! For license information please see 0030584f.d5af5fb7.js.LICENSE.txt */
"use strict";(self.webpackChunkbackstage_microsite=self.webpackChunkbackstage_microsite||[]).push([[821715],{87539:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>d});var n=t(474848),i=t(28453);const r={id:"v1.44.0",title:"v1.44.0",description:"Backstage Release v1.44.0"},a=void 0,o={id:"releases/v1.44.0",title:"v1.44.0",description:"Backstage Release v1.44.0",source:"@site/../docs/releases/v1.44.0.md",sourceDirName:"releases",slug:"/releases/v1.44.0",permalink:"/docs/next/releases/v1.44.0",draft:!1,unlisted:!1,editUrl:"https://github.com/backstage/backstage/edit/master/docs/releases/v1.44.0.md",tags:[],version:"current",frontMatter:{id:"v1.44.0",title:"v1.44.0",description:"Backstage Release v1.44.0"},sidebar:"releases",next:{title:"v1.43.0",permalink:"/docs/next/releases/v1.43.0"}},c={},d=[{value:"Highlights",id:"highlights",level:2},{value:"Scaffolder Backend 3.0",id:"scaffolder-backend-30",level:3},{value:"Design System: Backstage Theme",id:"design-system-backstage-theme",level:3},{value:"Design System: Backstage UI",id:"design-system-backstage-ui",level:3},{value:"<strong>BREAKING</strong>: Extension testing with new <code>renderTestApp</code>",id:"breaking-extension-testing-with-new-rendertestapp",level:3},{value:"Backstage CLI: Yarn plugin",id:"backstage-cli-yarn-plugin",level:3},{value:"Backstage CLI: App entrypoints",id:"backstage-cli-app-entrypoints",level:3},{value:"Support for custom external service auth methods",id:"support-for-custom-external-service-auth-methods",level:3},{value:"New plugin: Themer",id:"new-plugin-themer",level:3},{value:"Relaxed linting in the new frontend system",id:"relaxed-linting-in-the-new-frontend-system",level:3},{value:"TechDocs CLI serve now supports live reloading",id:"techdocs-cli-serve-now-supports-live-reloading",level:3},{value:"Easier server options through config",id:"easier-server-options-through-config",level:3},{value:"Security Fixes",id:"security-fixes",level:2},{value:"Upgrade path",id:"upgrade-path",level:2},{value:"Links and References",id:"links-and-references",level:2}];function l(e){const s={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(s.p,{children:["These are the release notes for the v1.44.0 release of ",(0,n.jsx)(s.a,{href:"https://backstage.io/",children:"Backstage"}),"."]}),"\n",(0,n.jsx)(s.p,{children:"A huge thanks to the whole team of maintainers and contributors as well as the amazing Backstage Community for all the hard work in getting this release developed and done."}),"\n",(0,n.jsx)(s.h2,{id:"highlights",children:"Highlights"}),"\n",(0,n.jsx)(s.h3,{id:"scaffolder-backend-30",children:"Scaffolder Backend 3.0"}),"\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.strong,{children:"BREAKING"}),":"]}),"\n",(0,n.jsxs)(s.p,{children:["Removal of deprecated types and interfaces: ",(0,n.jsx)(s.code,{children:"CreateWorkerOptions"}),", ",(0,n.jsx)(s.code,{children:"CurrentClaimedTask"}),", ",(0,n.jsx)(s.code,{children:"DatabaseTaskStore"}),", ",(0,n.jsx)(s.code,{children:"TaskManager"}),", etc."]}),"\n",(0,n.jsxs)(s.p,{children:["The ",(0,n.jsx)(s.code,{children:"TaskBroker"})," interface now requires the ",(0,n.jsx)(s.code,{children:"cancel"}),", ",(0,n.jsx)(s.code,{children:"recoverTasks"}),", and ",(0,n.jsx)(s.code,{children:"retry"})," methods to be implemented. If your implementation of ",(0,n.jsx)(s.code,{children:"TaskBroker"})," doesn\u2019t use these methods, you can replace them with a ",(0,n.jsx)(s.code,{children:"no-op () => void"})," function.\nPlease reach out to us in an issue as we're thinking about completely removing the ",(0,n.jsx)(s.code,{children:"TaskBroker"})," extension point soon and would like to hear your use cases for the upcoming re-architecture of the ",(0,n.jsx)(s.code,{children:"scaffolder-backend"})," plugin."]}),"\n",(0,n.jsxs)(s.p,{children:["The ",(0,n.jsx)(s.code,{children:"scaffolderActionsExtensionPoint"})," has been moved from ",(0,n.jsx)(s.code,{children:"/alpha"})," to the main export."]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-ts",children:"// before\nimport { scaffolderActionsExtensionPoint } from '@backstage/plugin-scaffolder-node/alpha';\n\n// after\nimport { scaffolderActionsExtensionPoint } from '@backstage/plugin-scaffolder-node';\n"})}),"\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.strong,{children:"DEPRECATION"}),":"]}),"\n",(0,n.jsx)(s.p,{children:"We're going to be working on refactoring a lot of the internals of the Scaffolder backend plugin, and with that come a lot of deprecations and removals for public types that are making these things hard."}),"\n",(0,n.jsx)(s.p,{children:"If you're using these types, please reach out to us either on Discord or a GitHub issue with your use cases."}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"SerializedTask"}),", ",(0,n.jsx)(s.code,{children:"SerializedTaskEvent"}),", ",(0,n.jsx)(s.code,{children:"TaskBroker"}),", ",(0,n.jsx)(s.code,{children:"TaskContext"}),", ",(0,n.jsx)(s.code,{children:"TaskBrokerDispatchOptions"}),", ",(0,n.jsx)(s.code,{children:"TaskBrokerDispatchResult"}),", ",(0,n.jsx)(s.code,{children:"TaskCompletionState"}),", ",(0,n.jsx)(s.code,{children:"TaskEventType"}),", ",(0,n.jsx)(s.code,{children:"TaskFilter"}),", ",(0,n.jsx)(s.code,{children:"TaskFilters"}),", ",(0,n.jsx)(s.code,{children:"TaskStatus"})," are the types that have now been marked as deprecated, and will be removed in a future release."]}),"\n"]}),"\n",(0,n.jsx)(s.h3,{id:"design-system-backstage-theme",children:"Design System: Backstage Theme"}),"\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.strong,{children:"BREAKING"})," Removed the built-in ",(0,n.jsx)(s.code,{children:"CssBaseline"})," from ",(0,n.jsx)(s.code,{children:"UnifiedThemeProvider"}),". If your Backstage instance looks broken after this update, you likely forgot to add our new Backstage UI global CSS. To do that, please import ",(0,n.jsx)(s.code,{children:"@backstage/ui/css/styles.css"})," in ",(0,n.jsx)(s.code,{children:"packages/app/src/index.tsx"}),":"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-tsx",children:"import '@backstage/ui/css/styles.css';\n"})}),"\n",(0,n.jsxs)(s.p,{children:["This change also removes the ",(0,n.jsx)(s.code,{children:"noCssBaseline"})," prop, which became redundant."]}),"\n",(0,n.jsx)(s.h3,{id:"design-system-backstage-ui",children:"Design System: Backstage UI"}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.strong,{children:"NEW"})}),"\n",(0,n.jsxs)(s.p,{children:["Adding a new ",(0,n.jsx)(s.code,{children:"Dialog"})," component to Backstage UI. Contributed by ",(0,n.jsx)(s.a,{href:"https://github.com/@ssjoblad",children:"@ssjoblad"})," in ",(0,n.jsx)(s.a,{href:"https://github.com/backstage/backstage/pull/31371",children:"#31371"}),"\nAdded new ",(0,n.jsx)(s.code,{children:"virtualized"}),", ",(0,n.jsx)(s.code,{children:"maxWidth"})," and ",(0,n.jsx)(s.code,{children:"maxHeight"})," props to ",(0,n.jsx)(s.code,{children:"Menu"}),", ",(0,n.jsx)(s.code,{children:"MenuListBox"}),", ",(0,n.jsx)(s.code,{children:"MenuAutocomplete"})," and ",(0,n.jsx)(s.code,{children:"MenuAutocompleteListBox"})," to allow for virtualization of long lists inside menus."]}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.strong,{children:"BREAKING"})}),"\n",(0,n.jsxs)(s.p,{children:["New ",(0,n.jsx)(s.code,{children:"PasswordField"})," component - removed ",(0,n.jsx)(s.code,{children:"password"})," and ",(0,n.jsx)(s.code,{children:"search"})," types from ",(0,n.jsx)(s.code,{children:"TextField"}),". Contributed by ",(0,n.jsx)(s.a,{href:"https://github.com/birdhb",children:"@birdhb"})," in ",(0,n.jsx)(s.a,{href:"https://github.com/backstage/backstage/pull/31238",children:"#31238"}),"\nRestructured Backstage UI component styling to use CSS Modules instead of pure CSS. We don't expect this to be an issue in practice but it is important to call out that all styles are now loaded through CSS modules with generated class names. We are still providing fixed class names for all components to allow anyone to style their Backstage instance.\nThe ",(0,n.jsx)(s.code,{children:"ScrollArea"})," component has been removed from Backstage UI because it did not meet our accessibility standards.\nRemoved Icon component in Backstage UI. This component was creating issues for tree-shaking. It is recommended to use icons from ",(0,n.jsx)(s.code,{children:"@remixicon/react"})," until we find a better alternative in Backstage UI."]}),"\n",(0,n.jsxs)(s.h3,{id:"breaking-extension-testing-with-new-rendertestapp",children:[(0,n.jsx)(s.strong,{children:"BREAKING"}),": Extension testing with new ",(0,n.jsx)(s.code,{children:"renderTestApp"})]}),"\n",(0,n.jsxs)(s.p,{children:["The ",(0,n.jsx)(s.code,{children:"extensions"})," option was removed from ",(0,n.jsx)(s.code,{children:"renderInTestApp"}),", because it led to confusing effects where the old and new frontend worlds were mixed. If you need to pass extensions to the test app, use the new ",(0,n.jsx)(s.code,{children:"renderTestApp"})," utility instead."]}),"\n",(0,n.jsx)(s.h3,{id:"backstage-cli-yarn-plugin",children:"Backstage CLI: Yarn plugin"}),"\n",(0,n.jsxs)(s.p,{children:["Added automatic detection and support for the Backstage Yarn plugin when generating new packages with ",(0,n.jsx)(s.code,{children:"yarn new"}),". When the plugin is installed, new packages will automatically use ",(0,n.jsx)(s.code,{children:"backstage:^"})," ranges for ",(0,n.jsx)(s.code,{children:"@backstage/*"})," dependencies."]}),"\n",(0,n.jsx)(s.h3,{id:"backstage-cli-app-entrypoints",children:"Backstage CLI: App entrypoints"}),"\n",(0,n.jsxs)(s.p,{children:["Added a new ",(0,n.jsx)(s.code,{children:"--entrypoint"})," option to the ",(0,n.jsx)(s.code,{children:"package start"})," command, which allows you to specify a custom entry directory/file for development applications. This is particularly useful when maintaining separate dev apps for different versions of your plugin (e.g., stable and alpha)."]}),"\n",(0,n.jsx)(s.p,{children:"For example, consider the following plugin dev folder structure:"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{children:"dev/\n  index.tsx\n  alpha/\n    index.ts\n"})}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:["The default ",(0,n.jsx)(s.code,{children:"yarn package start"})," command uses the ",(0,n.jsx)(s.code,{children:"dev/"})," folder as the entry point and executes ",(0,n.jsx)(s.code,{children:"dev/index.tsx"})," file;"]}),"\n",(0,n.jsxs)(s.li,{children:["Running ",(0,n.jsx)(s.code,{children:"yarn package start --entrypoint dev/alpha"})," will instead use ",(0,n.jsx)(s.code,{children:"dev/alpha/"})," as the entry point and execute ",(0,n.jsx)(s.code,{children:"dev/alpha/index.ts"})," file."]}),"\n"]}),"\n",(0,n.jsx)(s.h3,{id:"support-for-custom-external-service-auth-methods",children:"Support for custom external service auth methods"}),"\n",(0,n.jsx)(s.p,{children:"A new service ref has finally landed: the external token handler. This allows adopters to add custom handlers for authorization tokens that are sent to your backend plugins. So if your organization already has a settled service-to-service auth method in your backend flora, you can now seamlessly make Backstage accept those too. This complements the pre-existing support for static and JWKS-based tokens."}),"\n",(0,n.jsxs)(s.p,{children:["As usual, it's all documented in ",(0,n.jsx)(s.a,{href:"https://backstage.io/docs/auth/service-to-service-auth",children:"the corresponding service-to-service auth section"})," on the microsite."]}),"\n",(0,n.jsxs)(s.p,{children:["Contributed by ",(0,n.jsx)(s.a,{href:"https://github.com/Sarabadu",children:"@Sarabadu"})," in ",(0,n.jsx)(s.a,{href:"https://github.com/backstage/backstage/pull/28942",children:"#28942"})]}),"\n",(0,n.jsx)(s.h3,{id:"new-plugin-themer",children:"New plugin: Themer"}),"\n",(0,n.jsxs)(s.p,{children:["There\u2019s a new Material UI to Backstage UI migration helper plugin. It adds a new page at ",(0,n.jsx)(s.code,{children:"/mui-to-bui"})," that converts an existing MUI v5 theme into Backstage UI (BUI) CSS variables, with live preview and copy/download. There are some more details and screenshots in ",(0,n.jsx)(s.a,{href:"https://github.com/backstage/backstage/pull/31140",children:"the pull request"}),"."]}),"\n",(0,n.jsx)(s.h3,{id:"relaxed-linting-in-the-new-frontend-system",children:"Relaxed linting in the new frontend system"}),"\n",(0,n.jsxs)(s.p,{children:["The built-in lint rules used to forbid frontend plugin packages from importing other frontend plugin packages - those dependencies should normally be moved to a ",(0,n.jsx)(s.code,{children:"-react"})," or ",(0,n.jsx)(s.code,{children:"-common"})," package instead."]}),"\n",(0,n.jsx)(s.p,{children:"But in the new frontend system, it becomes a common desire to extend and adapt other plugins, which implies importing those plugins in code. So the lint rules have been relaxed to support this specific case, IF the plugin IDs of the two packages are the same."}),"\n",(0,n.jsx)(s.p,{children:"This means that you can now make an (internal) frontend plugin package that your app imports, and then that internal package in turn imports the open source plugin you are adapting. So you no longer have to keep your adaptations inside the app itself!"}),"\n",(0,n.jsxs)(s.p,{children:["Contributed by ",(0,n.jsx)(s.a,{href:"https://github.com/drodil",children:"@drodil"})," in ",(0,n.jsx)(s.a,{href:"https://github.com/backstage/backstage/pull/31373",children:"#31373"})]}),"\n",(0,n.jsx)(s.h3,{id:"techdocs-cli-serve-now-supports-live-reloading",children:"TechDocs CLI serve now supports live reloading"}),"\n",(0,n.jsxs)(s.p,{children:["The TechDocs CLI and its embedded app now leverage ",(0,n.jsx)(s.code,{children:"mkdocs"})," live reload support. Let us know how it works out for you!"]}),"\n",(0,n.jsxs)(s.p,{children:["Contributed by ",(0,n.jsx)(s.a,{href:"https://github.com/GabDug",children:"@GabDug"})," in ",(0,n.jsx)(s.a,{href:"https://github.com/backstage/backstage/pull/30541",children:"#30541"})]}),"\n",(0,n.jsx)(s.h3,{id:"easier-server-options-through-config",children:"Easier server options through config"}),"\n",(0,n.jsxs)(s.p,{children:["You can now more easily set low level HTTP server options such as request timeouts for your backend, directly from your app-config without having to adapt your root HTTP router service. Check out ",(0,n.jsx)(s.a,{href:"https://backstage.io/docs/backend-system/core-services/root-http-router",children:"the relevant service docs"})," for more details!"]}),"\n",(0,n.jsxs)(s.p,{children:["Contributed by ",(0,n.jsx)(s.a,{href:"https://github.com/BethGriggs",children:"@BethGriggs"})," in ",(0,n.jsx)(s.a,{href:"https://github.com/backstage/backstage/pull/30483",children:"#30483"})]}),"\n",(0,n.jsx)(s.h2,{id:"security-fixes",children:"Security Fixes"}),"\n",(0,n.jsx)(s.p,{children:"This release does not contain any security fixes."}),"\n",(0,n.jsx)(s.h2,{id:"upgrade-path",children:"Upgrade path"}),"\n",(0,n.jsxs)(s.p,{children:["We recommend that you keep your Backstage project up to date with this latest release. For more guidance on how to upgrade, check out the documentation for ",(0,n.jsx)(s.a,{href:"https://backstage.io/docs/getting-started/keeping-backstage-updated",children:"keeping Backstage updated"}),"."]}),"\n",(0,n.jsx)(s.h2,{id:"links-and-references",children:"Links and References"}),"\n",(0,n.jsx)(s.p,{children:"Below you can find a list of links and references to help you learn about and start using this new release."}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.a,{href:"https://backstage.io/",children:"Backstage official website"}),", ",(0,n.jsx)(s.a,{href:"https://backstage.io/docs/",children:"documentation"}),", and ",(0,n.jsx)(s.a,{href:"https://backstage.io/docs/getting-started/",children:"getting started guide"})]}),"\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.a,{href:"https://github.com/backstage/backstage",children:"GitHub repository"})}),"\n",(0,n.jsxs)(s.li,{children:["Backstage's ",(0,n.jsx)(s.a,{href:"https://backstage.io/docs/overview/versioning-policy",children:"versioning and support policy"})]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.a,{href:"https://discord.gg/backstage-687207715902193673",children:"Community Discord"})," for discussions and support"]}),"\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.a,{href:"https://github.com/backstage/backstage/tree/master/docs/releases/v1.44.0-changelog.md",children:"Changelog"})}),"\n",(0,n.jsxs)(s.li,{children:["Backstage ",(0,n.jsx)(s.a,{href:"https://backstage.io/demos",children:"Demos"}),", ",(0,n.jsx)(s.a,{href:"https://backstage.io/blog",children:"Blog"}),", ",(0,n.jsx)(s.a,{href:"https://backstage.io/docs/overview/roadmap",children:"Roadmap"})," and ",(0,n.jsx)(s.a,{href:"https://backstage.io/plugins",children:"Plugins"})]}),"\n"]}),"\n",(0,n.jsxs)(s.p,{children:["Sign up for our ",(0,n.jsx)(s.a,{href:"https://info.backstage.spotify.com/newsletter_subscribe",children:"newsletter"})," if you want to be informed about what is happening in the world of Backstage."]})]})}function h(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},221020:(e,s,t)=>{var n=t(296540),i=Symbol.for("react.element"),r=Symbol.for("react.fragment"),a=Object.prototype.hasOwnProperty,o=n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,c={key:!0,ref:!0,__self:!0,__source:!0};function d(e,s,t){var n,r={},d=null,l=null;for(n in void 0!==t&&(d=""+t),void 0!==s.key&&(d=""+s.key),void 0!==s.ref&&(l=s.ref),s)a.call(s,n)&&!c.hasOwnProperty(n)&&(r[n]=s[n]);if(e&&e.defaultProps)for(n in s=e.defaultProps)void 0===r[n]&&(r[n]=s[n]);return{$$typeof:i,type:e,key:d,ref:l,props:r,_owner:o.current}}s.Fragment=r,s.jsx=d,s.jsxs=d},474848:(e,s,t)=>{e.exports=t(221020)},28453:(e,s,t)=>{t.d(s,{R:()=>a,x:()=>o});var n=t(296540);const i={},r=n.createContext(i);function a(e){const s=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),n.createElement(r.Provider,{value:s},e.children)}}}]);